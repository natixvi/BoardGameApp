{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UnauthorizedError } from 'src/app/exceptions/UnauthorizedError';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/user/user.service\";\nimport * as i4 from \"primeng/api\";\nexport class LoginComponent {\n  constructor(formBuilder, router, userService, messageService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.userService = userService;\n    this.messageService = messageService;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', Validators.required]\n    }, {\n      updateOn: 'submit'\n    });\n  }\n  loginUser() {\n    if (this.loginForm.invalid) {\n      //this.messageService.add({severity: 'error', summary: 'Error', detail: 'Incorrect login data!'});\n      return;\n    }\n    this.userService.login(this.loginForm.value).subscribe({\n      next: () => {\n        this.router.navigate(['home']);\n      },\n      error: e => {\n        if (e instanceof UnauthorizedError) {\n          //this.messageService.add({severity: 'error', summary: 'Error', detail: 'Server connection error'})\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CommonModule, ReactiveFormsModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","Validators","UnauthorizedError","LoginComponent","constructor","formBuilder","router","userService","messageService","loginForm","group","email","required","password","updateOn","loginUser","invalid","login","value","subscribe","next","navigate","error","e","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","UserService","i4","MessageService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sources":["C:\\Users\\natix\\source\\repos\\BoardGameApp\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\natix\\source\\repos\\BoardGameApp\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component} from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { UnauthorizedError } from 'src/app/exceptions/UnauthorizedError';\nimport { userLoginData } from 'src/app/models/userLoginData';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, ],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n \n})\nexport class LoginComponent {\n\n  loginForm = this.formBuilder.group({\n    email: ['', [Validators.email, Validators.required]],\n    password: ['', Validators.required]\n  }, {updateOn: 'submit'})\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private userService: UserService, private messageService: MessageService){}\n \n  loginUser() {\n    if (this.loginForm.invalid){\n      //this.messageService.add({severity: 'error', summary: 'Error', detail: 'Incorrect login data!'});\n      return;\n    }\n    this.userService.login(this.loginForm.value as userLoginData).subscribe({\n      next: () => {\n        this.router.navigate(['home']);\n      },\n      error: (e) =>{\n        if(e instanceof UnauthorizedError){\n          //this.messageService.add({severity: 'error', summary: 'Error', detail: 'Server connection error'})\n        }\n      }\n    \n    });\n  }\n}\n","<!-- <div class = \"form\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n        <div >\n            <label>Email: <input formControlName=\"email\" placeholder=\"Email\"></label>\n        </div>\n            <small *ngIf=\"loginForm.controls.email.invalid && (loginForm.controls.email.dirty || loginForm.controls.email.touched)\">\n                Enter a valid email address.\n            </small>\n        <div>\n            <label>Password: <input formControlName=\"password\" placeholder=\"Password\"></label>\n        </div>\n        <button type=\"submit\">Log in</button>\n    </form> \n</div> -->\n<p>login works!</p>\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAAsBC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAG7E,SAASC,iBAAiB,QAAQ,sCAAsC;;;;;;AAYxE,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,WAAwB,EAAUC,cAA8B;IAA1H,KAAAH,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAL9H,KAAAC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACU,KAAK,EAAEV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,EAAE;MAACE,QAAQ,EAAE;IAAQ,CAAC,CAAC;EAEwH;EAEhJC,SAASA,CAAA;IACP,IAAI,IAAI,CAACN,SAAS,CAACO,OAAO,EAAC;MACzB;MACA;;IAEF,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC,IAAI,CAACR,SAAS,CAACS,KAAsB,CAAC,CAACC,SAAS,CAAC;MACtEC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;MAChC,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAI;QACX,IAAGA,CAAC,YAAYrB,iBAAiB,EAAC;UAChC;QAAA;MAEJ;KAED,CAAC;EACJ;EAAC,QAAAsB,CAAA,G;qBAzBUrB,cAAc,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdhC,cAAc;IAAAiC,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAb,EAAA,CAAAc,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCH3BnB,EAAA,CAAAqB,cAAA,QAAG;QAAArB,EAAA,CAAAsB,MAAA,mBAAY;QAAAtB,EAAA,CAAAuB,YAAA,EAAI;;;mBDFPjD,YAAY,EAAEC,mBAAmB;IAAAiD,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}