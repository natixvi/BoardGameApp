{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let JwtInterceptor = class JwtInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(request, next) {\n    const token = this.authService.getToken();\n    const currentDate = new Date();\n    if (token) {\n      const expirationDate = new Date(this.authService.getParsedToken().expirationDate * 1000);\n      if (expirationDate > currentDate) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n    }\n    return next.handle(request);\n  }\n};\nJwtInterceptor = __decorate([Injectable()], JwtInterceptor);","map":{"version":3,"names":["Injectable","JwtInterceptor","constructor","authService","intercept","request","next","token","getToken","currentDate","Date","expirationDate","getParsedToken","clone","setHeaders","Authorization","handle","__decorate"],"sources":["C:\\Users\\natix\\source\\repos\\BoardGameApp\\frontend\\src\\app\\services\\jwt\\jwt.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = this.authService.getToken();\n    const currentDate = new Date();\n    if(token){\n      const expirationDate = new Date(this.authService.getParsedToken().expirationDate * 1000);\n      if(expirationDate > currentDate){\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        })\n      }\n    }\n    return next.handle(request);\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAWnC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;IACzC,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,IAAGH,KAAK,EAAC;MACP,MAAMI,cAAc,GAAG,IAAID,IAAI,CAAC,IAAI,CAACP,WAAW,CAACS,cAAc,EAAE,CAACD,cAAc,GAAG,IAAI,CAAC;MACxF,IAAGA,cAAc,GAAGF,WAAW,EAAC;QAC9BJ,OAAO,GAAGA,OAAO,CAACQ,KAAK,CAAC;UACtBC,UAAU,EAAE;YACVC,aAAa,EAAE,UAAUR,KAAK;;SAEjC,CAAC;;;IAGN,OAAOD,IAAI,CAACU,MAAM,CAACX,OAAO,CAAC;EAC7B;CACD;AAnBYJ,cAAc,GAAAgB,UAAA,EAD1BjB,UAAU,EAAE,C,EACAC,cAAc,CAmB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}