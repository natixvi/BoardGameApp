{"ast":null,"code":"import { of } from \"rxjs\";\nexport const checkPasswordsValidator = group => {\n  let password = group.get('password')?.value;\n  let confirmPassword = group.get('conformPassword')?.value;\n  return of(password === confirmPassword ? null : {\n    passNotMatch: true\n  });\n};","map":{"version":3,"names":["of","checkPasswordsValidator","group","password","get","value","confirmPassword","passNotMatch"],"sources":["C:\\Users\\natix\\source\\repos\\BoardGameApp\\frontend\\src\\app\\components\\validators\\checkPasswords.validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\nimport { Observable, of } from \"rxjs\";\r\n\r\nexport const checkPasswordsValidator: ValidatorFn = (group: AbstractControl):  Observable<ValidationErrors | null>=> { \r\n    let password = group.get('password')?.value;\r\n    let confirmPassword = group.get('conformPassword')?.value;\r\n    return of(password === confirmPassword ? null : { passNotMatch: true })\r\n\r\n  }"],"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;AAErC,OAAO,MAAMC,uBAAuB,GAAiBC,KAAsB,IAAyC;EAChH,IAAIC,QAAQ,GAAGD,KAAK,CAACE,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;EAC3C,IAAIC,eAAe,GAAGJ,KAAK,CAACE,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK;EACzD,OAAOL,EAAE,CAACG,QAAQ,KAAKG,eAAe,GAAG,IAAI,GAAG;IAAEC,YAAY,EAAE;EAAI,CAAE,CAAC;AAEzE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}