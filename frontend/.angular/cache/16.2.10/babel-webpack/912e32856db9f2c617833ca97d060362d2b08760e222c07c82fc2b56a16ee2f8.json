{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { AuthService } from \"../services/auth.service\";\nexport const authInterceptor = (req, next) => {\n  console.log('request', req.method, req.url);\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n  console.log(\"Interceptor działa!\");\n  const currentDate = new Date();\n  if (token) {\n    const expirationDate = new Date(authService.getParsedToken().exp * 1000);\n    console.log(\"Interceptor działa 22!\");\n    if (expirationDate > currentDate) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } else {\n      authService.logout();\n    }\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","AuthService","authInterceptor","req","next","console","log","method","url","authService","token","getToken","currentDate","Date","expirationDate","getParsedToken","exp","clone","setHeaders","Authorization","logout"],"sources":["C:\\Users\\natix\\Desktop\\Nowy folder\\BoardGameApp\\frontend\\src\\app\\interceptors\\jwt.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn } from \"@angular/common/http\";\nimport { Inject, inject, Injector } from \"@angular/core\";\nimport { tap } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\n\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  \n  \n  console.log('request', req.method, req.url);\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n    console.log(\"Interceptor działa!\")\n    const currentDate = new Date();\n    if(token){\n      const expirationDate = new Date(authService.getParsedToken().exp * 1000);\n      console.log(\"Interceptor działa 22!\")\n      if(expirationDate > currentDate){\n        req = req.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        })\n      }\n      else{\n        authService.logout();\n      }\n    }\n    return next(req);\n      \n  \n}\n"],"mappings":"AACA,SAAiBA,MAAM,QAAkB,eAAe;AAExD,SAASC,WAAW,QAAQ,0BAA0B;AAGtD,OAAO,MAAMC,eAAe,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAG9DC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,GAAG,CAAC;EAC3C,MAAMC,WAAW,GAAGT,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMS,KAAK,GAAGD,WAAW,CAACE,QAAQ,EAAE;EAClCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,MAAMM,WAAW,GAAG,IAAIC,IAAI,EAAE;EAC9B,IAAGH,KAAK,EAAC;IACP,MAAMI,cAAc,GAAG,IAAID,IAAI,CAACJ,WAAW,CAACM,cAAc,EAAE,CAACC,GAAG,GAAG,IAAI,CAAC;IACxEX,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,IAAGQ,cAAc,GAAGF,WAAW,EAAC;MAC9BT,GAAG,GAAGA,GAAG,CAACc,KAAK,CAAC;QACdC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUT,KAAK;;OAEjC,CAAC;KACH,MACG;MACFD,WAAW,CAACW,MAAM,EAAE;;;EAGxB,OAAOhB,IAAI,CAACD,GAAG,CAAC;AAGpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}